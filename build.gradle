/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

buildscript {
    String rootGroupId = project.ext.rootGroupId = "name.remal.gradle-plugins.${rootProject.name}"
    String rootArtifactId = project.ext.rootArtifactId = rootProject.name
    String rootSnapshotVersion = project.ext.rootSnapshotVersion = '1-SNAPSHOT'
    dependencies {
        //classpath("$rootGroupId:$rootArtifactId:$rootSnapshotVersion") { version { strictly(rootSnapshotVersion) } }
        classpath 'name.remal.gradle-plugins.toolkit:build-logic:0.75.7'
        classpath 'com.google.code.gson:gson:2.13.2'
        classpath 'com.google.guava:guava:33.5.0-jre'
    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

allprojects {
    group = project.rootGroupId
    version = project.rootSnapshotVersion
}

apply plugin: 'name.remal.toolkit.build-logic'

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

apply plugin: 'java-gradle-plugin'
apply plugin: 'name.remal.generate-sources'

apply from: 'build-generate-models.gradle'

testSourceSets.create('componentTest')

dependencies {
    classesRelocation 'com.google.code.gson:gson:2.13.2'
    classesRelocation('org.eclipse.jgit:org.eclipse.jgit:6.10.1.202505221210-r') {
        exclude group: 'org.slf4j'
    }
}

gradlePlugin {
    plugins {
        'name.remal.github-repository-info' {
            id = 'name.remal.github-repository-info'
            implementationClass = 'name.remal.gradle_plugins.github_repository_info.GitHubRepositoryInfoPlugin'
            displayName = 'A Gradle plugin for accessing GitHub repository information'
            description = property('repository-description')
        }
    }
}

tasks.withType(Test).configureEach {
    ; [
        'name.remal.github-repository-info.api.token',
    ].forEach { name ->
        findProperty(name)?.with { systemProperty(name, it) }
    }
}
